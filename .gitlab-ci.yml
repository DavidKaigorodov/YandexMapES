stages:
  - build
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  LOGIN: raizero42
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2  # Добавьте эту строку, чтобы явно указать драйвер

build:
  stage: build
  image: docker:git  # Или корректный образ с Docker и Git
  services:
    - name: docker:dind
      command: ["--host=unix:///var/run/docker.sock"]  # Убедитесь, что используется правильная команда
  before_script:
    - apk add --no-cache docker-compose  # Установите docker-compose

  script:
    - echo "Запуск реестра Docker"
    - docker run -d -p 6000:6000 --name registry registry:2 
    - echo "Сборка клиента и сервера"
    - docker-compose -f docker-compose.yml down
    - docker-compose -f docker-compose.yml build
    - echo "Тегирование образов"
    - docker tag postgis/postgis:latest $LOGIN/postgis/postgis:latest
    - docker tag dpage/pgadmin4:latest $LOGIN/dpage/pgadmin4:latest
    - docker tag server:latest $LOGIN/server:latest
    - docker tag client:latest $LOGIN/client:latest
    - echo "Логин в реестр GitLab"
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin
    - echo "Пуш образов в реестр"
    - docker push $LOGIN/postgis/postgis:latest
    - docker push $LOGIN/dpage/pgadmin4:latest
    - docker push $LOGIN/client:latest
    - docker push $LOGIN/server:latest

deploy:
  stage: deploy
  image: docker:git
  services:
    - name: docker:dind
      command: ["--host=unix:///var/run/docker.sock"]
  before_script:
    - apk add --no-cache docker-compose

  script:
    - echo "Логин в реестр для развертывания"
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin
    - echo "Запуск docker-compose"
    - docker-compose -f docker-compose.infrastructure.yml up -d
