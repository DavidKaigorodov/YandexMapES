{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import'./App.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const handleFileInputChange=async event=>{const file=event.target.files[0];const formData=new FormData();formData.append('file',file);try{const response=await axios.post('http://localhost:5000/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log(response.data);}catch(error){console.error('Error uploading file:',error);}};const handleFileInputChange2=async event=>{const file=event.target.files[0];const formData=new FormData();formData.append('file',file);try{const response=await axios.post('http://localhost:5000/api/upload2',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log(response.data);}catch(error){console.error('Error uploading file:',error);}};const YandexMap=()=>{const[mapInitiated,setMapInitiated]=useState(false);const mapRef=useRef(null);const objectsAdded=useRef(false);const objectsAdded1=useRef(false);const stationPlacemarks=useRef([]);const zoneRectangles=useRef([]);useEffect(()=>{const apiKey='a0325676-108c-4a26-8b08-8ddbcf9ee724';const initializeMap=()=>{if(!window.ymaps){const script=document.createElement('script');script.src=\"https://api-maps.yandex.ru/2.1/?apikey=\".concat(apiKey,\"&lang=ru_RU\");script.onload=()=>{if(mapInitiated)return;const mapContainer=document.getElementById('map');if(mapContainer){mapContainer.innerHTML='';window.ymaps.ready(()=>{mapRef.current=new window.ymaps.Map(\"map\",{center:[55.76,37.64],zoom:10,controls:[]});mapRef.current.controls.add('zoomControl',{position:{top:10,left:10}});mapRef.current.controls.add('typeSelector',{position:{top:10,right:10}});setMapInitiated(true);});}};if(!document.querySelector('script[src^=\"https://api-maps.yandex.ru/2.1/\"]')){document.body.appendChild(script);}}};initializeMap();},[mapInitiated]);const handleStationButtonClick=()=>{if(!objectsAdded1.current){fetchStationData();objectsAdded1.current=true;}else{clearStations();objectsAdded1.current=false;}};const fetchStationData=()=>{fetch('http://localhost:5000/api/Station').then(response=>response.json()).then(data=>{data.forEach(coord=>{const placemark=new window.ymaps.Placemark([coord.latitude,coord.longitude],{hintContent:coord.address});stationPlacemarks.current.push(placemark);mapRef.current.geoObjects.add(placemark);});}).catch(error=>{console.error('Error fetching station data:',error);});};const handleZoneButtonClick=()=>{if(!objectsAdded.current){fetchZoneData();objectsAdded.current=true;}else{clearZones();objectsAdded.current=false;}};const fetchZoneData=()=>{fetch('http://localhost:5000/api/Zone').then(response=>response.json()).then(data=>{data.forEach(item=>{const{polygon,rating}=item;// Преобразование WKB в координаты\nconst coordinates=parseWKB(polygon);let color='rgba(0, 255, 0, 0.5)';// Зеленый цвет по умолчанию\nif(rating===0){color='rgba(255, 0, 0, 0.5)';// Красный цвет для rating = 0\n}else if(rating>0&&rating<0.5){color='rgba(255, 165, 0, 0.5)';// Оранжевый цвет для rating от 0 до 0.5\n}const polygonGeoObject=new window.ymaps.Polygon([coordinates],{},{fillColor:color,strokeColor:'#0000ff',opacity:0.5});mapRef.current.geoObjects.add(polygonGeoObject);});}).catch(error=>{console.error('Ошибка при получении данных полигонов:',error);});};// Функция для преобразования WKB в координаты\nfunction parseWKB(wkb){let offset=0;function readUInt8(){const value=wkb[offset];offset+=1;return value;}function readUInt32LE(){const value=wkb.readUInt32LE(offset);offset+=4;return value;}function readDoubleLE(){const value=wkb.readDoubleLE(offset);offset+=8;return value;}// Считываем первый байт (Byte Order)\nconst byteOrder=readUInt8();// Определяем, нужно ли использовать little-endian или big-endian формат данных\nconst littleEndian=byteOrder===1;// Считываем WKB тип\nconst wkbType=littleEndian?readUInt32LE():wkb.readUInt32BE(offset);// Проверяем, что тип геометрии - это полигон (Polygon)\nif(wkbType!==3){throw new Error('Неподдерживаемый тип WKB. Ожидался полигон (Polygon)');}// Считываем количество колец (rings) в полигоне\nconst numRings=littleEndian?readUInt32LE():wkb.readUInt32BE(offset);const coordinates=[];// Проходим по каждому кольцу\nfor(let i=0;i<numRings;i++){// Считываем количество точек в кольце\nconst numPoints=littleEndian?readUInt32LE():wkb.readUInt32BE(offset);const ring=[];// Проходим по каждой точке и считываем координаты (x, y)\nfor(let j=0;j<numPoints;j++){const x=littleEndian?readDoubleLE():wkb.readDoubleBE(offset);const y=littleEndian?readDoubleLE():wkb.readDoubleBE(offset);ring.push([y,x]);// Инверсия x и y для совместимости с форматами координат\n}coordinates.push(ring);}return coordinates;}const clearStations=()=>{stationPlacemarks.current.forEach(placemark=>{mapRef.current.geoObjects.remove(placemark);});stationPlacemarks.current=[];};const clearZones=()=>{zoneRectangles.current.forEach(rectangle=>{mapRef.current.geoObjects.remove(rectangle);});zoneRectangles.current=[];};return/*#__PURE__*/_jsxs(\"div\",{className:\"body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0442\\u0435 \\u042D\\u0417\\u0421:\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"header-button\",onChange:handleFileInputChange}),/*#__PURE__*/_jsx(\"br\",{}),\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0442\\u0435 \\u0437\\u043E\\u043D\\u044B:\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"header-button\",onChange:handleFileInputChange2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"baton\",onClick:handleStationButtonClick,children:\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u0442\\u0430\\u043D\\u0446\\u0438\\u0438\"}),/*#__PURE__*/_jsx(\"div\",{className:\"baton\",onClick:handleZoneButtonClick,children:\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0437\\u043E\\u043D\\u044B\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"map\",id:\"map\"})]})]});};export default YandexMap;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsx","_jsx","jsxs","_jsxs","handleFileInputChange","event","file","target","files","formData","FormData","append","response","post","headers","console","log","data","error","handleFileInputChange2","YandexMap","mapInitiated","setMapInitiated","mapRef","objectsAdded","objectsAdded1","stationPlacemarks","zoneRectangles","apiKey","initializeMap","window","ymaps","script","document","createElement","src","concat","onload","mapContainer","getElementById","innerHTML","ready","current","Map","center","zoom","controls","add","position","top","left","right","querySelector","body","appendChild","handleStationButtonClick","fetchStationData","clearStations","fetch","then","json","forEach","coord","placemark","Placemark","latitude","longitude","hintContent","address","push","geoObjects","catch","handleZoneButtonClick","fetchZoneData","clearZones","item","polygon","rating","coordinates","parseWKB","color","polygonGeoObject","Polygon","fillColor","strokeColor","opacity","wkb","offset","readUInt8","value","readUInt32LE","readDoubleLE","byteOrder","littleEndian","wkbType","readUInt32BE","Error","numRings","i","numPoints","ring","j","x","readDoubleBE","y","remove","rectangle","className","children","type","onChange","onClick","id"],"sources":["C:/Users/kakta/Desktop/YandexMap1212312/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\nconst handleFileInputChange = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const response = await axios.post('http://localhost:5000/api/upload', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    console.log(response.data);\n  } catch (error) {\n    console.error('Error uploading file:', error);\n  }\n};\n\nconst handleFileInputChange2 = async (event) => {\n  const file = event.target.files[0];\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const response = await axios.post('http://localhost:5000/api/upload2', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    console.log(response.data);\n  } catch (error) {\n    console.error('Error uploading file:', error);\n  }\n};\n\nconst YandexMap = () => {\n  const [mapInitiated, setMapInitiated] = useState(false);\n  const mapRef = useRef(null);\n  const objectsAdded = useRef(false);\n  const objectsAdded1 = useRef(false);\n  const stationPlacemarks = useRef([]);\n  const zoneRectangles = useRef([]);\n\n  \n  useEffect(() => {\n    const apiKey = 'a0325676-108c-4a26-8b08-8ddbcf9ee724';\n\n    const initializeMap = () => {\n      if (!window.ymaps) {\n        const script = document.createElement('script');\n        script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;\n        script.onload = () => {\n          if (mapInitiated) return;\n\n          const mapContainer = document.getElementById('map');\n          if (mapContainer) {\n            mapContainer.innerHTML = '';\n\n            window.ymaps.ready(() => {\n              mapRef.current = new window.ymaps.Map(\"map\", {\n                center: [55.76, 37.64],\n                zoom: 10,\n                controls: []\n              });\n\n              mapRef.current.controls.add('zoomControl', { position: { top: 10, left: 10 } });\n              mapRef.current.controls.add('typeSelector', { position: { top: 10, right: 10 } });\n\n              setMapInitiated(true);\n            });\n          }\n        };\n\n        if (!document.querySelector('script[src^=\"https://api-maps.yandex.ru/2.1/\"]')) {\n          document.body.appendChild(script);\n        }\n      }\n    };\n\n    initializeMap();\n  }, [mapInitiated]);\n\n  const handleStationButtonClick = () => {\n    if (!objectsAdded1.current) {\n      fetchStationData();\n      objectsAdded1.current = true;\n    } else {\n      clearStations();\n      objectsAdded1.current = false;\n    }\n  };\n\n\n  const fetchStationData = () => {\n    fetch('http://localhost:5000/api/Station')\n      .then(response => response.json())\n      .then(data => {\n        data.forEach(coord => {\n          const placemark = new window.ymaps.Placemark(\n            [coord.latitude, coord.longitude],\n            { hintContent: coord.address }\n          );\n\n          stationPlacemarks.current.push(placemark);\n          mapRef.current.geoObjects.add(placemark);\n        });\n      })\n      .catch(error => {\n        console.error('Error fetching station data:', error);\n      });\n  };\n\n  const handleZoneButtonClick = () => {\n    if (!objectsAdded.current) {\n      fetchZoneData();\n      objectsAdded.current = true;\n    } else {\n      clearZones();\n      objectsAdded.current = false;\n    }\n  };\n\n\n\n  const fetchZoneData = () => {\n    fetch('http://localhost:5000/api/Zone')\n      .then(response => response.json())\n      .then(data => {\n        data.forEach(item => {\n          const { polygon, rating } = item;\n  \n          // Преобразование WKB в координаты\n          const coordinates = parseWKB(polygon);\n  \n          let color = 'rgba(0, 255, 0, 0.5)'; // Зеленый цвет по умолчанию\n          if (rating === 0) {\n            color = 'rgba(255, 0, 0, 0.5)'; // Красный цвет для rating = 0\n          } else if (rating > 0 && rating < 0.5) {\n            color = 'rgba(255, 165, 0, 0.5)'; // Оранжевый цвет для rating от 0 до 0.5\n          }\n  \n          const polygonGeoObject = new window.ymaps.Polygon([coordinates], {}, {\n            fillColor: color,\n            strokeColor: '#0000ff',\n            opacity: 0.5,\n          });\n  \n          mapRef.current.geoObjects.add(polygonGeoObject);\n        });\n      })\n      .catch(error => {\n        console.error('Ошибка при получении данных полигонов:', error);\n      });\n  };\n  \n  // Функция для преобразования WKB в координаты\n  function parseWKB(wkb) {\n    let offset = 0;\n  \n    function readUInt8() {\n      const value = wkb[offset];\n      offset += 1;\n      return value;\n    }\n  \n    function readUInt32LE() {\n      const value = wkb.readUInt32LE(offset);\n      offset += 4;\n      return value;\n    }\n  \n    function readDoubleLE() {\n      const value = wkb.readDoubleLE(offset);\n      offset += 8;\n      return value;\n    }\n  \n    // Считываем первый байт (Byte Order)\n    const byteOrder = readUInt8();\n    \n    // Определяем, нужно ли использовать little-endian или big-endian формат данных\n    const littleEndian = byteOrder === 1;\n  \n    // Считываем WKB тип\n    const wkbType = littleEndian ? readUInt32LE() : wkb.readUInt32BE(offset);\n  \n    // Проверяем, что тип геометрии - это полигон (Polygon)\n    if (wkbType !== 3) {\n      throw new Error('Неподдерживаемый тип WKB. Ожидался полигон (Polygon)');\n    }\n  \n    // Считываем количество колец (rings) в полигоне\n    const numRings = littleEndian ? readUInt32LE() : wkb.readUInt32BE(offset);\n    \n    const coordinates = [];\n  \n    // Проходим по каждому кольцу\n    for (let i = 0; i < numRings; i++) {\n      // Считываем количество точек в кольце\n      const numPoints = littleEndian ? readUInt32LE() : wkb.readUInt32BE(offset);\n      const ring = [];\n  \n      // Проходим по каждой точке и считываем координаты (x, y)\n      for (let j = 0; j < numPoints; j++) {\n        const x = littleEndian ? readDoubleLE() : wkb.readDoubleBE(offset);\n        const y = littleEndian ? readDoubleLE() : wkb.readDoubleBE(offset);\n        ring.push([y, x]); // Инверсия x и y для совместимости с форматами координат\n      }\n  \n      coordinates.push(ring);\n    }\n  \n    return coordinates;\n  }\n  \n  \n\n\n  const clearStations = () => {\n    stationPlacemarks.current.forEach((placemark) => {\n      mapRef.current.geoObjects.remove(placemark);\n    });\n    stationPlacemarks.current = [];\n  };\n  \n  const clearZones = () => {\n    zoneRectangles.current.forEach((rectangle) => {\n      mapRef.current.geoObjects.remove(rectangle);\n    });\n    zoneRectangles.current = [];\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"header\">Добавте ЭЗС:\n      <input\n          type=\"file\"\n          className=\"header-button\"\n          onChange={handleFileInputChange}\n          \n        />\n        <br></br>\n        Добавте зоны:\n        <input\n          type=\"file\"\n          className=\"header-button\"\n          onChange={handleFileInputChange2}\n          \n        />\n      </div>\n      <div className='content'>\n      <div className=\"controls\">\n        <div className='baton' onClick={handleStationButtonClick}>Показать станции</div>\n        <div className='baton' onClick={handleZoneButtonClick}>Показать зоны</div>\n      </div>\n      <div className=\"map\" id=\"map\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default YandexMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}