{"ast":null,"code":"export const handleStationButtonClick = (mapRef, stationPlacemarks, filters) => {\n  // Сначала очищаем метки, чтобы не дублировать при следующем запросе.\n  clearStations(mapRef, stationPlacemarks);\n\n  // Теперь загружаем данные в зависимости от выбранных фильтров.\n  fetchStationData(mapRef, stationPlacemarks, filters);\n};\nconst fetchStationData = (mapRef, stationPlacemarks, filters) => {\n  fetch('http://localhost:5000/api/Station').then(response => response.json()).then(data => {\n    // Фильтрация данных в зависимости от выбранных критериев.\n    const filteredData = data.filter(coord => {\n      const matchesAll = filters.includes('all');\n\n      // Фильтры по количеству портов\n      const matchesConnector1 = filters.includes('connector1') && coord.connectors_total === 1;\n      const matchesConnector2 = filters.includes('connector2') && coord.connectors_total === 2;\n      const matchesConnector3 = filters.includes('connector3') && coord.connectors_total === 3;\n\n      // Фильтры по типу зарядной станции\n      const matchesSlow = filters.includes('slow') && coord.evse_type === false; // Проверка для медленных зарядных станций\n      const matchesFast = filters.includes('fast') && coord.evse_type === true; // Проверка для быстрых зарядных станций\n\n      // Если выбрано \"Показать все\", то возвращаем true\n      if (matchesAll) return true;\n\n      // Проверяем условия для соответствия: тип зарядной станции и количество портов\n      const matchesTypeAndConnectorsSLOW = matchesSlow && (matchesConnector1 || matchesConnector2 || matchesConnector3);\n      const matchesTypeAndConnectorsFAST = matchesFast && (matchesConnector1 || matchesConnector2 || matchesConnector3);\n      if (matchesTypeAndConnectorsSLOW) {\n        console.log(\"aasfsafasfasfas\");\n        return coord.evse_type === false && (matchesConnector1 || matchesConnector2 || matchesConnector3);\n      }\n      if (matchesTypeAndConnectorsFAST) {\n        return coord.evse_type === true && (matchesConnector1 || matchesConnector2 || matchesConnector3);\n      }\n      return matchesConnector1 || matchesConnector2 || matchesConnector3 || matchesSlow || matchesFast;\n    });\n\n    // Добавляем метки на карту для отфильтрованных данных.\n    filteredData.forEach(coord => {\n      const placemark = new window.ymaps.Placemark([coord.latitude, coord.longitude], {\n        hintContent: coord.adress\n      });\n      stationPlacemarks.current.push(placemark);\n      mapRef.current.geoObjects.add(placemark);\n    });\n  }).catch(error => {\n    console.error('Error fetching station data:', error);\n  });\n};\nconst clearStations = (mapRef, objectsAdded1) => {\n  objectsAdded1.current.forEach(placemark => {\n    mapRef.current.geoObjects.remove(placemark);\n  });\n  objectsAdded1.current = [];\n};","map":{"version":3,"names":["handleStationButtonClick","mapRef","stationPlacemarks","filters","clearStations","fetchStationData","fetch","then","response","json","data","filteredData","filter","coord","matchesAll","includes","matchesConnector1","connectors_total","matchesConnector2","matchesConnector3","matchesSlow","evse_type","matchesFast","matchesTypeAndConnectorsSLOW","matchesTypeAndConnectorsFAST","console","log","forEach","placemark","window","ymaps","Placemark","latitude","longitude","hintContent","adress","current","push","geoObjects","add","catch","error","objectsAdded1","remove"],"sources":["C:/Users/Disve/Desktop/YandexMap ES/client/src/StationHandler.js"],"sourcesContent":["export const handleStationButtonClick = (mapRef, stationPlacemarks, filters) => {\r\n  // Сначала очищаем метки, чтобы не дублировать при следующем запросе.\r\n  clearStations(mapRef, stationPlacemarks);\r\n\r\n  // Теперь загружаем данные в зависимости от выбранных фильтров.\r\n  fetchStationData(mapRef, stationPlacemarks, filters);\r\n};\r\n\r\nconst fetchStationData = (mapRef, stationPlacemarks, filters) => {\r\n  fetch('http://localhost:5000/api/Station')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          // Фильтрация данных в зависимости от выбранных критериев.\r\n          const filteredData = data.filter(coord => {\r\n              const matchesAll = filters.includes('all');\r\n\r\n              // Фильтры по количеству портов\r\n              const matchesConnector1 = filters.includes('connector1') && coord.connectors_total === 1;\r\n              const matchesConnector2 = filters.includes('connector2') && coord.connectors_total === 2;\r\n              const matchesConnector3 = filters.includes('connector3') && coord.connectors_total === 3;\r\n\r\n              // Фильтры по типу зарядной станции\r\n              const matchesSlow = filters.includes('slow') && coord.evse_type === false; // Проверка для медленных зарядных станций\r\n              const matchesFast = filters.includes('fast') && coord.evse_type === true; // Проверка для быстрых зарядных станций\r\n\r\n              // Если выбрано \"Показать все\", то возвращаем true\r\n              if (matchesAll) return true;\r\n\r\n              // Проверяем условия для соответствия: тип зарядной станции и количество портов\r\n              const matchesTypeAndConnectorsSLOW = (matchesSlow) && \r\n                  (matchesConnector1 || matchesConnector2 || matchesConnector3);\r\n               const matchesTypeAndConnectorsFAST = (matchesFast) && \r\n                  (matchesConnector1 || matchesConnector2 || matchesConnector3);   \r\n\r\n              if (matchesTypeAndConnectorsSLOW) {\r\n                console.log(\"aasfsafasfasfas\")\r\n                      return coord.evse_type === false &&\r\n                          (matchesConnector1 || matchesConnector2 || matchesConnector3);\r\n                  }\r\n              if (matchesTypeAndConnectorsFAST) {\r\n                return coord.evse_type === true &&\r\n                    (matchesConnector1 || matchesConnector2 || matchesConnector3);\r\n              }\r\n\r\n              return matchesConnector1 || matchesConnector2 || matchesConnector3 || matchesSlow || matchesFast;\r\n          });\r\n\r\n          // Добавляем метки на карту для отфильтрованных данных.\r\n          filteredData.forEach(coord => {\r\n              const placemark = new window.ymaps.Placemark(\r\n                  [coord.latitude, coord.longitude],\r\n                  { hintContent: coord.adress }\r\n              );\r\n\r\n              stationPlacemarks.current.push(placemark);\r\n              mapRef.current.geoObjects.add(placemark);\r\n          });\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching station data:', error);\r\n      });\r\n};\r\n\r\nconst clearStations = (mapRef, objectsAdded1) => {\r\n  objectsAdded1.current.forEach((placemark) => {\r\n      mapRef.current.geoObjects.remove(placemark);\r\n  });\r\n  objectsAdded1.current = [];\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}