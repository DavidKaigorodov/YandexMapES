{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Disve\\\\Desktop\\\\\\u044F\\u043D\\u0434\\u0435\\u043A\\u0441 \\u043A\\u0430\\u0440\\u0442\\u044B\\\\1\\\\YandexMap1212312\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YandexMap = () => {\n  _s();\n  const [mapInitiated, setMapInitiated] = useState(false);\n  const mapRef = useRef(null);\n  const objectsAdded = useRef(false);\n  const objectsAdded1 = useRef(false);\n  const stationPlacemarks = useRef([]);\n  const zoneRectangles = useRef([]);\n  useEffect(() => {\n    const apiKey = 'a0325676-108c-4a26-8b08-8ddbcf9ee724';\n    const initializeMap = () => {\n      if (!window.ymaps) {\n        const script = document.createElement('script');\n        script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;\n        script.onload = () => {\n          if (mapInitiated) return;\n          const mapContainer = document.getElementById('map');\n          if (mapContainer) {\n            mapContainer.innerHTML = '';\n            window.ymaps.ready(() => {\n              mapRef.current = new window.ymaps.Map(\"map\", {\n                center: [55.76, 37.64],\n                zoom: 10,\n                controls: []\n              });\n              mapRef.current.controls.add('zoomControl', {\n                position: {\n                  top: 10,\n                  left: 10\n                }\n              });\n              mapRef.current.controls.add('typeSelector', {\n                position: {\n                  top: 10,\n                  right: 10\n                }\n              });\n              setMapInitiated(true);\n            });\n          }\n        };\n        if (!document.querySelector('script[src^=\"https://api-maps.yandex.ru/2.1/\"]')) {\n          document.body.appendChild(script);\n        }\n      }\n    };\n    initializeMap();\n  }, [mapInitiated]);\n  const handleStationButtonClick = () => {\n    if (!objectsAdded1.current) {\n      fetchStationData();\n      objectsAdded1.current = true;\n    } else {\n      clearStations();\n      objectsAdded1.current = false;\n    }\n  };\n  const fetchStationData = () => {\n    fetch('http://localhost:5000/api/Station').then(response => response.json()).then(data => {\n      data.forEach(coord => {\n        const placemark = new window.ymaps.Placemark([coord.latitude, coord.longitude], {\n          hintContent: coord.address\n        });\n        stationPlacemarks.current.push(placemark);\n        mapRef.current.geoObjects.add(placemark);\n      });\n    }).catch(error => {\n      console.error('Error fetching station data:', error);\n    });\n  };\n  const handleZoneButtonClick = () => {\n    if (!objectsAdded.current) {\n      fetchZoneData();\n      objectsAdded.current = true;\n    } else {\n      clearZones();\n      objectsAdded.current = false;\n    }\n  };\n  const fetchZoneData = () => {\n    fetch('http://localhost:5000/api/Zone').then(response => response.json()).then(data => {\n      data.forEach(item => {\n        const {\n          polygon,\n          rating\n        } = item;\n\n        // Преобразование WKB в координаты\n        const coordinates = parseWKB(polygon);\n        let color = 'rgba(0, 255, 0, 0.5)'; // Зеленый цвет по умолчанию\n        if (rating === 0) {\n          color = 'rgba(255, 0, 0, 0.5)'; // Красный цвет для rating = 0\n        } else if (rating > 0 && rating < 0.5) {\n          color = 'rgba(255, 165, 0, 0.5)'; // Оранжевый цвет для rating от 0 до 0.5\n        }\n        const polygonGeoObject = new window.ymaps.Polygon([coordinates], {}, {\n          fillColor: color,\n          strokeColor: '#0000ff',\n          opacity: 0.5\n        });\n        mapRef.current.geoObjects.add(polygonGeoObject);\n      });\n    }).catch(error => {\n      console.error('Ошибка при получении данных полигонов:', error);\n    });\n  };\n\n  // Функция для преобразования WKB в координаты\n  function parseWKB(wkb) {\n    let wkbArray;\n    if (typeof wkb === 'string') {\n      wkbArray = new Uint8Array(wkb.match(/.{2}/g).map(byte => parseInt(byte, 16))); // Преобразование шестнадцатеричной строки в массив байтов\n    } else {\n      console.error('WKB должен быть строкой');\n      return [];\n    }\n    function readWKB(wkbArray, offset) {\n      let type = wkbArray[offset];\n      let coordinates = [];\n      offset += 1;\n      if (type == 1) {\n        // Точка\n        let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n        let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n        coordinates.push([x, y]);\n      } else if (type == 2) {\n        // Линия\n        let numPoints = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n        offset += 4;\n        for (let i = 0; i < numPoints; i++) {\n          let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n          let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n          coordinates.push([x, y]);\n          offset += 16;\n        }\n      } else if (type == 3) {\n        // Полигон\n        let numRings = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n        offset += 4;\n        for (let i = 0; i < numRings; i++) {\n          let numPoints = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n          offset += 4;\n          let ring = [];\n          for (let j = 0; j < numPoints; j++) {\n            let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n            let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n            ring.push([x, y]);\n            offset += 16;\n          }\n          coordinates.push(ring);\n        }\n      }\n      return coordinates;\n    }\n    return readWKB(wkbArray, 0);\n  }\n  const clearStations = () => {\n    stationPlacemarks.current.forEach(placemark => {\n      mapRef.current.geoObjects.remove(placemark);\n    });\n    stationPlacemarks.current = [];\n  };\n  const clearZones = () => {\n    zoneRectangles.current.forEach(rectangle => {\n      mapRef.current.geoObjects.remove(rectangle);\n    });\n    zoneRectangles.current = [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"\\u0428\\u0410\\u041F\\u041A\\u0410\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"header-button\"\n        //onChange={handleFileInputChange}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"header-button\"\n        //onChange={}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"baton\",\n          onClick: handleStationButtonClick,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u0442\\u0430\\u043D\\u0446\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"baton\",\n          onClick: handleZoneButtonClick,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0437\\u043E\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(YandexMap, \"h0OPqsNcYoT24h5ddw5rsLqm4vw=\");\n_c = YandexMap;\nexport default YandexMap;\nvar _c;\n$RefreshReg$(_c, \"YandexMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","YandexMap","_s","mapInitiated","setMapInitiated","mapRef","objectsAdded","objectsAdded1","stationPlacemarks","zoneRectangles","apiKey","initializeMap","window","ymaps","script","document","createElement","src","onload","mapContainer","getElementById","innerHTML","ready","current","Map","center","zoom","controls","add","position","top","left","right","querySelector","body","appendChild","handleStationButtonClick","fetchStationData","clearStations","fetch","then","response","json","data","forEach","coord","placemark","Placemark","latitude","longitude","hintContent","address","push","geoObjects","catch","error","console","handleZoneButtonClick","fetchZoneData","clearZones","item","polygon","rating","coordinates","parseWKB","color","polygonGeoObject","Polygon","fillColor","strokeColor","opacity","wkb","wkbArray","Uint8Array","match","map","byte","parseInt","readWKB","offset","type","x","Float64Array","slice","buffer","y","numPoints","Uint32Array","i","numRings","ring","j","remove","rectangle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Disve/Desktop/яндекс карты/1/YandexMap1212312/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\n\nconst YandexMap = () => {\n  const [mapInitiated, setMapInitiated] = useState(false);\n  const mapRef = useRef(null);\n  const objectsAdded = useRef(false);\n  const objectsAdded1 = useRef(false);\n  const stationPlacemarks = useRef([]);\n  const zoneRectangles = useRef([]);\n\n  useEffect(() => {\n    const apiKey = 'a0325676-108c-4a26-8b08-8ddbcf9ee724';\n\n    const initializeMap = () => {\n      if (!window.ymaps) {\n        const script = document.createElement('script');\n        script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;\n        script.onload = () => {\n          if (mapInitiated) return;\n\n          const mapContainer = document.getElementById('map');\n          if (mapContainer) {\n            mapContainer.innerHTML = '';\n\n            window.ymaps.ready(() => {\n              mapRef.current = new window.ymaps.Map(\"map\", {\n                center: [55.76, 37.64],\n                zoom: 10,\n                controls: []\n              });\n\n              mapRef.current.controls.add('zoomControl', { position: { top: 10, left: 10 } });\n              mapRef.current.controls.add('typeSelector', { position: { top: 10, right: 10 } });\n\n              setMapInitiated(true);\n            });\n          }\n        };\n\n        if (!document.querySelector('script[src^=\"https://api-maps.yandex.ru/2.1/\"]')) {\n          document.body.appendChild(script);\n        }\n      }\n    };\n\n    initializeMap();\n  }, [mapInitiated]);\n\n  const handleStationButtonClick = () => {\n    if (!objectsAdded1.current) {\n      fetchStationData();\n      objectsAdded1.current = true;\n    } else {\n      clearStations();\n      objectsAdded1.current = false;\n    }\n  };\n\n\n  const fetchStationData = () => {\n    fetch('http://localhost:5000/api/Station')\n      .then(response => response.json())\n      .then(data => {\n        data.forEach(coord => {\n          const placemark = new window.ymaps.Placemark(\n            [coord.latitude, coord.longitude],\n            { hintContent: coord.address }\n          );\n\n          stationPlacemarks.current.push(placemark);\n          mapRef.current.geoObjects.add(placemark);\n        });\n      })\n      .catch(error => {\n        console.error('Error fetching station data:', error);\n      });\n  };\n\n  const handleZoneButtonClick = () => {\n    if (!objectsAdded.current) {\n      fetchZoneData();\n      objectsAdded.current = true;\n    } else {\n      clearZones();\n      objectsAdded.current = false;\n    }\n  };\n\n\n\n  const fetchZoneData = () => {\n    fetch('http://localhost:5000/api/Zone')\n      .then(response => response.json())\n      .then(data => {\n        data.forEach(item => {\n          const { polygon, rating } = item;\n  \n          // Преобразование WKB в координаты\n          const coordinates = parseWKB(polygon);\n  \n          let color = 'rgba(0, 255, 0, 0.5)'; // Зеленый цвет по умолчанию\n          if (rating === 0) {\n            color = 'rgba(255, 0, 0, 0.5)'; // Красный цвет для rating = 0\n          } else if (rating > 0 && rating < 0.5) {\n            color = 'rgba(255, 165, 0, 0.5)'; // Оранжевый цвет для rating от 0 до 0.5\n          }\n  \n          const polygonGeoObject = new window.ymaps.Polygon([coordinates], {}, {\n            fillColor: color,\n            strokeColor: '#0000ff',\n            opacity: 0.5,\n          });\n  \n          mapRef.current.geoObjects.add(polygonGeoObject);\n        });\n      })\n      .catch(error => {\n        console.error('Ошибка при получении данных полигонов:', error);\n      });   \n  };\n  \n  // Функция для преобразования WKB в координаты\n  function parseWKB(wkb) {\n    let wkbArray;\n  if (typeof wkb === 'string') {\n    wkbArray = new Uint8Array(wkb.match(/.{2}/g).map(byte => parseInt(byte, 16))); // Преобразование шестнадцатеричной строки в массив байтов\n  } else {\n    console.error('WKB должен быть строкой');\n    return [];\n  }\n\n    function readWKB(wkbArray, offset) {\n        let type = wkbArray[offset];\n        let coordinates = [];\n        offset += 1;\n\n        if (type == 1) { // Точка\n            let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n            let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n            coordinates.push([x, y]);\n        } else if (type == 2) { // Линия\n            let numPoints = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n            offset += 4;\n            \n            for (let i = 0; i < numPoints; i++) {\n                let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n                let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n                coordinates.push([x, y]);\n                offset += 16;\n            }\n        } else if (type == 3) { // Полигон\n            let numRings = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n            offset += 4;\n            \n            for (let i = 0; i < numRings; i++) {\n                let numPoints = new Uint32Array(wkbArray.slice(offset, offset + 4).buffer)[0];\n                offset += 4;\n                let ring = [];\n                \n                for (let j = 0; j < numPoints; j++) {\n                    let x = new Float64Array(wkbArray.slice(offset, offset + 8).buffer)[0];\n                    let y = new Float64Array(wkbArray.slice(offset + 8, offset + 16).buffer)[0];\n                    ring.push([x, y]);\n                    offset += 16;\n                }\n                \n                coordinates.push(ring);\n            }\n        }\n        \n        return coordinates;\n    }\n\n    return readWKB(wkbArray, 0);\n}\n\n  \n  \n\n\n  const clearStations = () => {\n    stationPlacemarks.current.forEach((placemark) => {\n      mapRef.current.geoObjects.remove(placemark);\n    });\n    stationPlacemarks.current = [];\n  };\n  \n  const clearZones = () => {\n    zoneRectangles.current.forEach((rectangle) => {\n      mapRef.current.geoObjects.remove(rectangle);\n    });\n    zoneRectangles.current = [];\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"header\">ШАПКА\n      <input\n          type=\"file\"\n          className=\"header-button\"\n          //onChange={handleFileInputChange}\n          \n        />\n        <input\n          type=\"file\"\n          className=\"header-button\"\n          //onChange={}\n          \n        />\n      </div>\n      <div className='content'>\n      <div className=\"controls\">\n        <div className='baton' onClick={handleStationButtonClick}>Показать станции</div>\n        <div className='baton' onClick={handleZoneButtonClick}>Показать зоны</div>\n      </div>\n      <div className=\"map\" id=\"map\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default YandexMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}