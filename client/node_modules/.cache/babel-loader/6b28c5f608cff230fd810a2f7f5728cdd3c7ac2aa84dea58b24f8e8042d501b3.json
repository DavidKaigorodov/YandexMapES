{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Disve\\\\Desktop\\\\1\\\\YandexMap1212312\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YandexMap = () => {\n  _s();\n  const [mapInitiated, setMapInitiated] = useState(false);\n  useEffect(() => {\n    const apiKey = 'a0325676-108c-4a26-8b08-8ddbcf9ee724';\n    const initializeMap = () => {\n      if (window.ymaps && mapInitiated) return;\n      const script = document.createElement('script');\n      script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;\n      script.onload = () => {\n        if (mapInitiated) return;\n        const mapContainer = document.getElementById('map');\n        if (mapContainer) {\n          mapContainer.innerHTML = '';\n          window.ymaps.ready(() => {\n            const map = new window.ymaps.Map(\"map\", {\n              center: [55.76, 37.64],\n              zoom: 10\n            });\n            map.controls.add(new window.ymaps.control.ZoomControl());\n            map.controls.add(new window.ymaps.control.TypeSelector());\n            map.controls.remove('searchControl');\n            map.controls.remove('trafficControl');\n            fetch('http://localhost:5000/api/Station').then(response => response.json()).then(data => {\n              data.forEach(coord => {\n                const placemark = new window.ymaps.Placemark([coord.latitude, coord.longitude], {\n                  hintContent: coord.address\n                });\n                map.geoObjects.add(placemark);\n              });\n            }).catch(error => {\n              console.error('Error fetching station data:', error);\n            });\n            setMapInitiated(true);\n            fetch('http://localhost:5000/api/Zone').then(response => response.json()).then(data => {\n              data.forEach(item => {\n                const g1 = item.g1;\n                const g2 = item.g2;\n                const g3 = item.g3;\n                const g4 = item.g4;\n                const rating = item.rating;\n                const color = rating === 0 ? 'rgba(255, 0, 0, 1)' : 'rgba(0, 255, 0, 1)';\n                const rectangle = new window.ymaps.GeoObject({\n                  geometry: {\n                    type: 'Rectangle',\n                    coordinates: [[g1, g2], [g3, g4], [g1, g4], [g3, g2]]\n                  },\n                  properties: {\n                    hintContent: `Rating: ${rating}`\n                  }\n                }, {\n                  fillColor: color,\n                  strokeColor: '#0000ff',\n                  opacity: 0.5\n                });\n                map.geoObjects.add(rectangle);\n              });\n            }).catch(error => {\n              console.error('Error fetching zone data:', error);\n            });\n          });\n        }\n      };\n      document.body.appendChild(script);\n    };\n    if (!mapInitiated) {\n      initializeMap();\n    }\n  }, [mapInitiated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"\\u0428\\u0410\\u041F\\u041A\\u0410\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(YandexMap, \"wstvBtuUDQdDHLpOTmbO6l0I4qU=\");\n_c = YandexMap;\nexport default YandexMap;\nvar _c;\n$RefreshReg$(_c, \"YandexMap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","YandexMap","_s","mapInitiated","setMapInitiated","apiKey","initializeMap","window","ymaps","script","document","createElement","src","onload","mapContainer","getElementById","innerHTML","ready","map","Map","center","zoom","controls","add","control","ZoomControl","TypeSelector","remove","fetch","then","response","json","data","forEach","coord","placemark","Placemark","latitude","longitude","hintContent","address","geoObjects","catch","error","console","item","g1","g2","g3","g4","rating","color","rectangle","GeoObject","geometry","type","coordinates","properties","fillColor","strokeColor","opacity","body","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Disve/Desktop/1/YandexMap1212312/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst YandexMap = () => {\n  const [mapInitiated, setMapInitiated] = useState(false);\n\n  useEffect(() => {\n    const apiKey = 'a0325676-108c-4a26-8b08-8ddbcf9ee724';\n\n    const initializeMap = () => {\n      if (window.ymaps && mapInitiated) return;\n\n      const script = document.createElement('script');\n      script.src = `https://api-maps.yandex.ru/2.1/?apikey=${apiKey}&lang=ru_RU`;\n      script.onload = () => {\n        if (mapInitiated) return;\n\n        const mapContainer = document.getElementById('map');\n        if (mapContainer) {\n          mapContainer.innerHTML = '';\n\n          window.ymaps.ready(() => {\n            const map = new window.ymaps.Map(\"map\", {\n              center: [55.76, 37.64],\n              zoom: 10,\n            });\n            map.controls.add(new window.ymaps.control.ZoomControl());\n            map.controls.add(new window.ymaps.control.TypeSelector());\n            map.controls.remove('searchControl');\n            map.controls.remove('trafficControl');\n\n            fetch('http://localhost:5000/api/Station')\n              .then(response => response.json())\n              .then(data => {\n                data.forEach(coord => {\n                  const placemark = new window.ymaps.Placemark(\n                    [coord.latitude, coord.longitude],\n                    {\n                      hintContent: coord.address,\n                    }\n                  );\n                  map.geoObjects.add(placemark);\n                });\n              })\n              .catch(error => {\n                console.error('Error fetching station data:', error);\n              });\n\n            setMapInitiated(true);\n\n            fetch('http://localhost:5000/api/Zone')\n              .then(response => response.json())\n              .then(data => {\n                data.forEach(item => {\n                  const g1 = item.g1;\n                  const g2 = item.g2;\n                  const g3 = item.g3;\n                  const g4 = item.g4;\n                  const rating = item.rating;\n\n                  const color = rating === 0 ? 'rgba(255, 0, 0, 1)' : 'rgba(0, 255, 0, 1)';\n\n                  const rectangle = new window.ymaps.GeoObject({\n                    geometry: {\n                      type: 'Rectangle',\n                      coordinates: [[g1, g2], [g3, g4], [g1, g4], [g3, g2]],\n                    },\n                    properties: {\n                      hintContent: `Rating: ${rating}`,\n                    },\n                  }, {\n                    fillColor: color,\n                    strokeColor: '#0000ff',\n                    opacity: 0.5,\n                  });\n                  map.geoObjects.add(rectangle);\n                });\n              })\n              .catch(error => {\n                console.error('Error fetching zone data:', error);\n              });\n          });\n        }\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!mapInitiated) {\n      initializeMap();\n    }\n  }, [mapInitiated]);\n\n  return (\n    <div className=\"body\">\n      {/* Шапка */}\n      <div className=\"header\">\n        ШАПКА\n      </div>\n      {/* Меню */}\n      <div className=\"map\" id=\"map\" style={{ width: '100%', height: '400px' }}></div>\n    </div>\n  );\n};\n\nexport default YandexMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}